@model IEnumerable<FUNewsManagementSystem.BusinessObject.Category>

@{
    ViewData["Title"] = "Index";
    var parentSelectList = new SelectList(Model, "CategoryId", "CategoryName");
}

@if (TempData["SuccessMessage"] != null)
{
    <div id="success-alert" class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div id="error-alert" class="alert alert-danger alert-dismissible fade show" role="alert">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
}


<link href="/css/category.css" rel="stylesheet"/>
<h1>Category List</h1>
<div class="category-card">
    <p>
        <a href="#" data-bs-toggle="modal" data-bs-target="#createModal">Create New</a>
        @await Html.PartialAsync("_CreateModal", new Category(), new ViewDataDictionary(ViewData)
        {
        { "ParentCategoryId", parentSelectList }
        })


    </p>
    <!-- Center: Search Bar -->
    @if (ViewData["ShowSearch"] as bool? == true)
    {
        @await Html.PartialAsync("_SearchBar", Context.Request.Query["search"].ToString())
    }

    <table class="table">
        <thead>
            <tr>
                <th>@Html.DisplayNameFor(model => model.CategoryName)</th>
                <th>@Html.DisplayNameFor(model => model.CategoryDesciption)</th>
                <th>@Html.DisplayNameFor(model => model.IsActive)</th>
                <th>Parent Category</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
    @foreach (var item in Model)
    {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.CategoryName)</td>
                <td>@Html.DisplayFor(modelItem => item.CategoryDesciption)</td>
                <td>@Html.DisplayFor(modelItem => item.IsActive)</td>
                <td>@(item.ParentCategory?.CategoryName ?? "None")</td>
                <td>
                    <a href="#" data-bs-toggle="modal" data-bs-target="#editModal-@item.CategoryId">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.CategoryId">Details</a> |
                    <button type="button" class="btn btn-link text-danger p-0" data-bs-toggle="modal" data-bs-target="#deleteModal-@item.CategoryId">
                        Delete
                    </button>
                </td>
            </tr>

                @await Html.PartialAsync("_EditModal", item, new ViewDataDictionary(ViewData)
            {
            { "Id", $"editModal-{item.CategoryId}" },
            { "ParentCategoryId", parentSelectList }
            })

            @* Delete Modal *@
            @await Html.PartialAsync("_DeleteModal", item.CategoryId.ToString(), new ViewDataDictionary(ViewData)
            {
            { "Id", item.CategoryId }
            })
    }
        </tbody>
    </table>
</div>
@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}
